{"version":3,"sources":["tasks/week-8/api-client.js","tasks/week-8/features/auth/slices/currentUserSlice.js","tasks/week-8/features/auth/middlewares/auth.js","tasks/week-8/configureStore.js","tasks/week-8/features/auth/components/SignInForm.js","tasks/week-8/features/auth/containers/SignInPage.js","tasks/week-8/features/home/containers/HomePage.js","tasks/week-8/components/404.js","tasks/week-8/features/auth/selectors/currentUser.js","tasks/week-8/components/ProtectedRoute.js","tasks/week-8/components/NotAuthorizedNavbar.js","tasks/week-8/components/AuthorizedNavbar.js","tasks/week-8/features/posts/slices/postsSlice.js","tasks/week-8/features/posts/components/post.js","tasks/week-8/features/posts/containers/PostsPage.js","tasks/week-8/features/users/slices/usersSlice.js","tasks/week-8/features/users/containers/UsersPage.js","tasks/week-8/components/form/TextField.js","tasks/week-8/features/signup/components/SignUpForm.js","tasks/week-8/features/signup/containers/SignUpPage.js","tasks/week-8/features/friends-request/slices/friendsRequestSlice.js","tasks/week-8/features/friends-request/containers/friendsPage.js","tasks/week-8/SocialApp.js","tasks/week-8/index.js","App.js","serviceWorker.js","index.js"],"names":["authToken","localStorage","getItem","apiClient","axios","create","defaults","headers","interceptors","response","use","error","status","console","log","data","store","dispatch","logout","Promise","reject","fetchCurrentUser","createAsyncThunk","thunkAPI","a","get","condition","dispatchConditionRejection","currentUserSlice","createSlice","name","initialState","user","isLoading","reducers","signIn","state","action","payload","extraReducers","pending","loading","fulfilled","rejected","actions","authMiddleware","next","type","toString","setItem","clear","middleware","getDefaultMiddleware","configureStore","reducer","currentUser","form","formReducer","devTools","ConnectedSignInForm","reduxForm","handleSubmit","pristine","submitting","className","Form","onSubmit","Field","component","Button","disabled","Message","attached","SignInPage","location","useLocation","history","useHistory","useDispatch","from","pathname","submitForm","useCallback","values","post","then","replace","catch","err","SubmissionError","_error","message","Container","HomePage","props","NotFoundPage","Header","getCurrentUser","createSelector","ProtectedRoute","children","rest","isAuthenticated","useSelector","render","to","NotAuthorizedNavbar","Menu","activeClassName","AuthorizedNavbar","position","Item","onClick","fetchPosts","likePost","postId","posts","likedPost","find","_id","index","indexOf","likes","likesNumber","Post","title","author","first_name","last_name","created_at","body","PostsPage","useEffect","map","key","fetchUsers","addToFriends","userId","UsersPage","users","resultMessage","isResultMessage","TextField","labelColor","input","label","meta","touched","warning","Label","basic","color","pointing","asyncValidate","params","email","isUserExist","ConnectedSignUpForm","validate","errors","test","password","repeatPassword","age","warn","warnings","length","asyncBlurFields","invalid","SignUpPage","useState","hasSignUpCompleted","setSignUpCompleted","registeredEmail","setRegisteredEmail","success","header","content","fetchFriends","confirmFriendsRequest","rejectFriendsRequest","friends","isRequestLoading","FriendsPage","setFriendsAction","filter","friend","inFriends","recipient","getFriend","SocialApp","hasUserRequested","setUserRequested","path","exact","App","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.621ac09a.chunk.js","sourcesContent":["import axios from 'axios';\nimport store from './configureStore';\nimport { logout } from './features/auth/slices/currentUserSlice'\n\nconst authToken = localStorage.getItem('authToken');\n\nconst apiClient = axios.create();\n\nif (authToken) {\n    apiClient.defaults.headers['Authorization'] = `Bearer ${authToken}`;\n}\n\napiClient.interceptors.response.use(function (response) {\n    return response;\n}, function (error) {\n    //catches if the session ended!\n    if ( error.response.status === 401) {\n        console.log(\"Auth error\", error.response.data);\n        store.dispatch(logout());\n    }\n    return Promise.reject(error);\n});\n\nexport default apiClient\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport apiClient from '../../../api-client';\n\n// First, create the thunk\nconst fetchCurrentUser = createAsyncThunk(\n  'currentUser/fetchCurrentUser',\n  async (thunkAPI) => {\n    const response = await apiClient.get('/api/users/me');\n    return response.data\n  },\n  {\n    condition: () => !!apiClient.defaults.headers['Authorization'],\n    dispatchConditionRejection: false\n  }\n);\n\nconst currentUserSlice = createSlice({\n  name: 'currentUser',\n  initialState: {\n    user: null,\n    isLoading: false\n  },\n  reducers: {\n    signIn(state, action) {\n      state.user = action.payload.user;\n    },\n    logout(state) {\n      state.user = null;\n      state.isLoading = false;\n    }\n  },\n  extraReducers: {\n    // Add reducers for additional action types here, and handle loading state as needed\n    [fetchCurrentUser.pending]: (state) => {\n      state.loading = true\n    },\n    [fetchCurrentUser.fulfilled]: (state, action) => {\n      // Add user to the state array\n      state.user = action.payload;\n    },\n    [fetchCurrentUser.rejected]: () => ({ user: null, isLoading: false })\n  }\n});\n\nexport const { logout, signIn } = currentUserSlice.actions;\nexport { fetchCurrentUser }\n\nexport default currentUserSlice.reducer;\n","import { signIn, logout } from '../slices/currentUserSlice'\nimport apiClient from \"../../../api-client\";\n\nconst authMiddleware = store => next => action => {\n    if (action.type === signIn.toString()) {\n        const { authToken } = action.payload;\n        localStorage.setItem('authToken', authToken);\n        apiClient.defaults.headers['Authorization'] = `Bearer ${authToken}`;\n    }\n    if (action.type === logout.toString()) {\n        localStorage.clear();\n        delete apiClient.defaults.headers['Authorization'];\n    }\n\n    next(action);\n};\n\nexport default authMiddleware\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport currentUser from './features/auth/slices/currentUserSlice';\n// import posts from './features/posts/slices/postsSlice';\n// import users from './features/users/slices/usersSlice';\n// import friends from './features/friends-request/slices/friendsRequestSlice'\nimport authMiddleware from './features/auth/middlewares/auth'\nimport { reducer as formReducer } from 'redux-form'\n\n\nconst middleware = [...getDefaultMiddleware(), authMiddleware];\n\nconst store = configureStore({\n    reducer: {\n        currentUser,\n        // friends,\n        // posts,\n        // users,\n        form: formReducer,\n    },\n    devTools: true,\n    middleware\n});\n\nexport default store;\n","import React from 'react';\nimport { Button, Form, Message } from 'semantic-ui-react';\nimport { reduxForm, Field } from \"redux-form\";\nimport './SignInForm.css';\n\nfunction SignInForm({ handleSubmit, pristine, submitting, error }) {\n  return (\n    <div className='sign-in-form-wrapper'>\n      <Form className='sign-in-form' onSubmit={handleSubmit}>\n        <Form.Field>\n          <label>Email</label>\n          <Field name=\"email\" component=\"input\" type=\"text\" />\n        </Form.Field>\n        <Form.Field>\n          <label>Password</label>\n          <Field name=\"password\" component=\"input\" type=\"password\" />\n        </Form.Field>\n        <Button disabled={pristine || submitting}>Sign In</Button>\n      </Form>\n      {error &&\n      <Message error attached='bottom'>{error}</Message>\n      }\n    </div>\n  );\n}\n\nconst ConnectedSignInForm = reduxForm({\n  form: 'signin'\n})(SignInForm);\n\nexport default ConnectedSignInForm;\n","import React, { useCallback, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { useDispatch } from \"react-redux\";\nimport { signIn } from \"../slices/currentUserSlice\";\nimport apiClient from \"../../../api-client\";\nimport { Container } from \"semantic-ui-react\";\nimport SignInForm from '../components/SignInForm';\nimport { SubmissionError } from \"redux-form\";\n\nfunction SignInPage() {\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { from } = location.state || { from: { pathname: \"/\" } };\n\n  const submitForm = useCallback(values => {\n    return apiClient.post('/auth', values)\n      .then(response => dispatch(signIn(response.data)))\n      .then(() => history.replace(from))\n      .catch(err => {\n        throw new SubmissionError({ _error: err.response.data.message });\n      })\n  }, []);\n\n  return (\n    <Container className='login-page'>\n      <SignInForm onSubmit={submitForm} />\n    </Container>\n  );\n}\n\nexport default SignInPage;\n","import React from 'react';\n\nfunction HomePage(props) {\n  return (\n    <div className='home page'>\n      This is a home page\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react'\nimport { Header, Container } from 'semantic-ui-react';\n\nexport default function NotFoundPage() {\n    return (\n        <Container className='page'>\n            <Header>\n                404 Page not Found\n            </Header>\n        </Container>\n    )\n}\n","import { createSelector } from '@reduxjs/toolkit'\n\nconst getCurrentUser = createSelector(\n  state => state.currentUser.user,\n  user => user\n);\n\nexport { getCurrentUser }\n","// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentUser } from \"../features/auth/selectors/currentUser\";\n\nexport default function ProtectedRoute({ children, ...rest }) {\n  const currentUser = useSelector(getCurrentUser);\n  const isAuthenticated = !!currentUser;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthenticated\n          ? children\n          : <Redirect to={{ pathname: '/sign-in', state: { from: location } }} />\n      }\n    />\n  );\n}\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { Menu } from \"semantic-ui-react\";\n\nfunction NotAuthorizedNavbar(props) {\n  return (\n    <Menu>\n      <NavLink to='/sign-in' className='item' activeClassName='active-nav'>Sign In</NavLink>\n      <NavLink to='/sign-up' className='item' activeClassName='active-nav'>Sign Up</NavLink>\n    </Menu>\n  );\n}\n\nexport default NotAuthorizedNavbar;\n","import React from 'react';\nimport { Menu } from \"semantic-ui-react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../features/auth/slices/currentUserSlice\";\n\nfunction AuthorizedNavbar() {\n  const dispatch = useDispatch();\n  return (\n    <Menu>\n      <NavLink to='/posts' className='item' activeClassName='active-nav'>Posts</NavLink>\n      <NavLink to='/users' className='item' activeClassName='active-nav'>Users</NavLink>\n      <NavLink to='/friends' className='item' activeClassName='active-nav'>Friends</NavLink>\n      <Menu.Menu position='right'>\n        <Menu.Item onClick={() => dispatch(logout())}>Logout</Menu.Item>\n      </Menu.Menu>\n    </Menu>\n  );\n}\n\nexport default AuthorizedNavbar;\n","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\nimport apiClient from '../../../api-client';\n\nconst fetchPosts = createAsyncThunk(\n    'posts/fetchPosts',\n    async (thunkAPI) => {\n        const response = await apiClient.get('/');\n        return response.data\n    },\n    {\n        condition: () => !!apiClient.defaults.headers['Authorization'],\n        dispatchConditionRejection: false\n    }\n);\n\nconst likePost = createAsyncThunk(\n    'posts/likePost',\n    async (postId, thunkAPI) => {\n        const response = await apiClient.post(`/${postId}/like`);\n        return response.data\n    },\n    {\n        condition: () => !!apiClient.defaults.headers['Authorization'],\n        dispatchConditionRejection: false\n    }\n);\n\nconst postsSlice = createSlice({\n    name: 'posts',\n    initialState: {\n        posts: [],\n        isLoading: false\n    },\n    reducers: {\n    },\n    extraReducers: {\n\n        [fetchPosts.pending]: (state) => {\n            state.isLoading = true\n        },\n        [fetchPosts.fulfilled]: (state, action) => {\n\n            state.posts = action.payload;\n            state.isLoading = false;\n        },\n        [fetchPosts.rejected]: () => ({ posts: [], isLoading: false }),\n        [likePost.pending]: (state) => {\n            state.isLoading = true;\n        },\n        [likePost.fulfilled]: (state, action) => {\n            state.isLoading = false;\n            let likedPost = state.posts.find(post=> post._id === action.payload._id);\n            let index = state.posts.indexOf(likedPost);\n\n            if (index !== -1) {\n                state.posts[index].likes = action.payload.likes;\n                state.posts[index].likesNumber = action.payload.likesNumber;\n            }\n\n        },\n    }\n});\n\nexport { fetchPosts, likePost }\n\nexport default postsSlice.reducer;\n","import React from 'react';\nimport {likePost} from '../slices/postsSlice';\nimport {useDispatch} from 'react-redux';\n\nfunction Post({post}) {\n    const dispatch = useDispatch();\n\n    const addLikeToPost = (postId) => {\n        console.log('postId in products.js', postId);\n        dispatch(likePost(postId));\n    };\n\n    return (\n        <div>\n            <p>{post._id}</p>\n            <h2>{post.title}</h2>\n            <p><span>{post.author.first_name}</span><span>{post.author.last_name}</span></p>\n            <p>Created: {post.created_at}</p>\n            <p>{post.body}</p>\n            <p> Likes number {post.likesNumber}</p>\n            <button onClick={()=>addLikeToPost(post._id)}>Like</button>\n        </div>\n    );\n}\n\nexport default Post;\n","import React, {useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPosts } from '../slices/postsSlice';\nimport Post from '../components/post';\n\nfunction PostsPage() {\n  const dispatch = useDispatch();\n  const { isLoading, posts } = useSelector(state => state.posts);\n\n  useEffect(() => {\n    dispatch(fetchPosts())\n  },[dispatch]);\n\n\n  return (\n      <ul>\n        {posts.map(post => <Post key={post._id} post={post} />)}\n      </ul>\n  );\n}\n\n\nexport default PostsPage;\n","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\nimport apiClient from '../../../api-client';\n\nconst fetchUsers = createAsyncThunk(\n    'users/fetchUsers',\n    async (thunkAPI) => {\n        const response = await apiClient.get('/');\n        return response.data\n    },\n    {\n        condition: () => !!apiClient.defaults.headers['Authorization'],\n        dispatchConditionRejection: false\n    }\n);\n\nconst addToFriends = createAsyncThunk(\n    'users/addToFriends',\n    async (userId, thunkAPI) => {\n        const response = await apiClient.post(`/${userId}/add`);\n        return response.data\n    },\n    {\n        condition: () => !!apiClient.defaults.headers['Authorization'],\n        dispatchConditionRejection: false\n    }\n);\n\nconst usersSlice = createSlice({\n    name: 'users',\n    initialState: {\n        users: [],\n        isLoading: false,\n        resultMessage: null,\n    },\n    reducers: {\n    },\n    extraReducers: {\n\n        [fetchUsers.pending]: (state) => {\n            state.isLoading = true;\n            state.resultMessage = null;\n        },\n        [fetchUsers.fulfilled]: (state, action) => {\n            state.users = action.payload;\n            state.resultMessage = null;\n            state.isLoading = false;\n        },\n        [fetchUsers.rejected]: () => ({ users: [], isLoading: false }),\n        [addToFriends.fulfilled]: (state) => {\n            state.isLoading = false;\n            state.resultMessage = null;\n        },\n    }\n});\n\nexport { fetchUsers, addToFriends }\n\nexport default usersSlice.reducer;\n\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { fetchUsers, addToFriends } from '../slices/usersSlice';\n\n\n\nconst UsersPage = () => {\n  const dispatch = useDispatch();\n  const { isLoading, users, resultMessage} = useSelector(state => state.users);\n\n  useEffect(() => {\n    dispatch(fetchUsers())\n  },[dispatch]);\n\n  const handleAddToFriends = (userId) => {\n    dispatch(addToFriends(userId));\n  };\n\n  const isResultMessage = resultMessage ? <div>{resultMessage.message}</div> : null;\n\n  if(isLoading) return <div>Loading...</div>;\n\n  return (\n      <div>\n        <ul>\n          {users.map( user => <li key={user._id}>\n                <h2><span>{user.first_name} </span><span>{user.last_name}</span></h2>\n                <p>{user._id}</p>\n                <button onClick={()=> handleAddToFriends(user._id)}>Add to friends</button>\n              </li>\n          )}\n        </ul>\n        {isResultMessage}\n      </div>\n\n  );\n};\n\nexport default UsersPage;\n","import React from 'react'\nimport { Form, Label } from 'semantic-ui-react';\n\nfunction TextField({\n  input,\n  label,\n  type,\n  meta: { touched, error, warning },\n  ...rest\n}) {\n\n  let labelColor;\n\n  if(error) {\n    labelColor = 'red'\n  } else if (warning) {\n    labelColor = 'yellow'\n  }\n  const message = error || warning;\n  return (\n    <Form.Field>\n      <input\n        type={type}\n        {...input}\n        {...rest}\n      />\n      {touched && message &&\n      <Label\n        basic\n        color={labelColor}\n        pointing='above'\n      >\n        {message}\n      </Label>\n      }\n    </Form.Field>\n  )\n}\n\nexport default TextField;\n\n","import React from 'react';\nimport { reduxForm, Field } from \"redux-form\";\nimport './SignUpForm.css';\nimport { Button, Form, Message } from \"semantic-ui-react\";\nimport TextField from \"../../../components/form/TextField\";\nimport apiClient from \"../../../api-client\";\n\n\nfunction SignUpForm({ handleSubmit, pristine, submitting, error, invalid }) {\n  return (\n    <div className='sign-up-form-wrapper'>\n      <Form className='sign-up-form' onSubmit={handleSubmit}>\n        <Form.Field>\n          <label>Email</label>\n          <Field name=\"email\" component={TextField} type=\"text\" />\n        </Form.Field>\n        <Form.Field>\n          <label>Password</label>\n          <Field name=\"password\" component={TextField} type=\"password\" />\n        </Form.Field>\n        <Form.Field>\n          <label>Repeat Password</label>\n          <Field name=\"repeatPassword\" component={TextField} type=\"password\" />\n        </Form.Field>\n        <Form.Field>\n          <label>First Name</label>\n          <Field name=\"first_name\" component={TextField} type=\"text\" />\n        </Form.Field>\n        <Form.Field>\n          <label>Last Name</label>\n          <Field name=\"last_name\" component={TextField} type=\"text\" />\n        </Form.Field>\n        <Form.Field>\n          <label>Age</label>\n          <Field name=\"age\" component={TextField} type=\"number\" />\n        </Form.Field>\n        <Button disabled={invalid || pristine || submitting}>\n          Sign Up\n        </Button>\n      </Form>\n      {error &&\n      <Message error attached='bottom'>{error}</Message>\n      }\n    </div>\n  );\n}\n\nconst validate = values => {\n  const errors = {};\n  if (!values.email) {\n    errors.email = 'Required!'\n  } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(values.email)) {\n    errors.email = 'Invalid email address'\n  }\n  if (!values.password) {\n    errors.password = 'Required'\n  }\n  if (values.password !== values.repeatPassword) {\n    errors.repeatPassword = 'Password Must be equal'\n  }\n  if (!values.first_name) {\n    errors.first_name = 'Required'\n  }\n  if (!values.last_name) {\n    errors.last_name = 'Required'\n  }\n  if (!values.age) {\n    errors.age = 'Required'\n  } else if (values.age < 18) {\n    errors.age = 'Sorry, you must be at least 18 years old'\n  }\n  return errors;\n};\n\nconst warn = values => {\n  const warnings = {};\n  if (values.age < 19) {\n    warnings.age = 'Hmm, you seem a bit young...'\n  }\n  if (values?.password?.length < 6) {\n    warnings.password = 'Password is too weak'\n  }\n  return warnings;\n};\n\nconst asyncValidate = async (values) => {\n  const response = await apiClient.get('/signup/check-user', { params: { email: values.email } });\n  if (response.data.isUserExist) throw { email: 'This email is already taken' }\n};\n\nconst ConnectedSignUpForm = reduxForm({\n  form: 'signup',\n  validate,\n  warn,\n  asyncValidate,\n  asyncBlurFields: ['email']\n})(SignUpForm);\n\nexport default ConnectedSignUpForm;\n","import React, { useState } from 'react';\nimport { Container, Message } from \"semantic-ui-react\";\nimport SignUpForm from \"../components/SignUpForm\";\nimport apiClient from \"../../../api-client\";\n\nfunction SignUpPage() {\n\n  const [hasSignUpCompleted, setSignUpCompleted] = useState(false);\n  const [registeredEmail, setRegisteredEmail] = useState(false);\n\n  const submitForm = values => {\n    apiClient.post('/signup', values).then(() => {\n      setSignUpCompleted(true);\n      setRegisteredEmail(values.email);\n    })\n  };\n  return (\n    <Container className='sign-up-page'>\n      {!hasSignUpCompleted && <SignUpForm onSubmit={submitForm} /> }\n      { hasSignUpCompleted &&\n      <Message\n        success\n        header='Your user registration was successful'\n        content={<div>Please confirm your email address <strong>{registeredEmail}</strong></div>}\n      >\n      </Message>\n      }\n    </Container>\n  );\n}\n\nexport default SignUpPage;\n","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\nimport apiClient from '../../../api-client';\n\nconst fetchFriends = createAsyncThunk(\n    'friends/fetchUserFriend',\n    async (thunkAPI) => {\n        const response = await apiClient.get('/');\n        return response.data\n    },\n    {\n        condition: () => !!apiClient.defaults.headers['Authorization'],\n        dispatchConditionRejection: false\n    }\n);\n\nconst confirmFriendsRequest = createAsyncThunk(\n    'friends/confirm',\n    async (userId, thunkAPI) => {\n        const response = await apiClient.post(`/${userId}/confirm`);\n        return response.data\n    },\n    {\n        condition: () => !!apiClient.defaults.headers['Authorization'],\n        dispatchConditionRejection: false\n    }\n);\n\nconst rejectFriendsRequest = createAsyncThunk(\n    'friends/reject',\n    async (userId, thunkAPI) => {\n        const response = await apiClient.post(`/${userId}/reject`);\n        return response.data\n    },\n    {\n        condition: () => !!apiClient.defaults.headers['Authorization'],\n        dispatchConditionRejection: false\n    }\n);\n\nconst friendsRequestSlice = createSlice({\n    name: 'friendsRequest',\n    initialState: {\n        friends: [],\n        isRequestLoading: false,\n    },\n    reducers: {\n    },\n    extraReducers: {\n        [fetchFriends.pending]: (state) => {\n            state.isRequestLoading = true;\n        },\n        [fetchFriends.fulfilled]: (state, action) => {\n            state.friends = action.payload;\n            state.isRequestLoading = false;\n        },\n        [fetchFriends.rejected]: () => ({ friends: [], isLoading: false}),\n        [confirmFriendsRequest.pending]: (state) => {\n            state.isRequestLoading = true;\n        },\n        [confirmFriendsRequest.rejected]: () => ({ isLoading: false} ),\n        [confirmFriendsRequest.fulfilled]: (state, action) => {\n            state.isRequestLoading = false;\n            state.friends = action.payload;\n        },\n        [rejectFriendsRequest.pending]: (state) => {\n            state.isRequestLoading = true;\n        },\n        [rejectFriendsRequest.rejected]: () => ({ isLoading: false}),\n        [rejectFriendsRequest.fulfilled]: (state, action) => {\n            state.isRequestLoading = false;\n            state.friends = action.payload;\n        },\n    }\n});\n\nexport { fetchFriends, confirmFriendsRequest, rejectFriendsRequest}\n\nexport default friendsRequestSlice.reducer;\n\n","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport { fetchFriends, rejectFriendsRequest, confirmFriendsRequest } from '../slices/friendsRequestSlice';\n\nfunction FriendsPage() {\n    const dispatch = useDispatch();\n    const [friendsAction, setFriendsAction] = useState(null);\n    const { friends, isRequestLoading} = useSelector(state => state.friends);\n\n    const pending = friends.filter(friend => friend.status === 2);\n\n    const getFriend = (friend) => {\n        return friend.recipient\n    };\n\n    const inFriends = friends.filter(friend => friend.status === 3).map((friend) => getFriend(friend));\n\n    useEffect(() => {\n        dispatch(fetchFriends())\n    },[dispatch]);\n\n    const handleConfirm = (userId) => {\n        setFriendsAction('confirm');\n        dispatch(confirmFriendsRequest(userId))\n    };\n\n    const handleReject = (userId) => {\n        setFriendsAction('reject');\n        dispatch(rejectFriendsRequest(userId));\n    };\n\n    if(isRequestLoading) return <div>Loading...</div>;\n\n    return (\n        <div>\n            <h3>Incoming requests</h3>\n            <ul>\n                {pending.map(friend => <li>\n                    <h2><span>{friend.recipient.first_name}</span><span>{friend.recipient.last_name}</span></h2>\n                    <button type='button' onClick={()=> handleConfirm(friend._id)}>Confirm</button>\n                </li>)}\n            </ul>\n            <h3>My friends</h3>\n            <ul>\n                {inFriends.map(friend=> <li>\n                    <h2><span>{friend.first_name}</span><span>{friend.last_name}</span></h2>\n                    <button type='button' onClick={()=> handleReject(friend._id)}>Remove from friends</button>\n                </li>)}\n            </ul>\n        </div>\n    );\n}\n\nexport default FriendsPage;\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, NavLink } from 'react-router-dom'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCurrentUser } from \"./features/auth/slices/currentUserSlice\";\nimport { Container, Header } from \"semantic-ui-react\";\n\n/* routes */\nimport SignInPage from \"./features/auth/containers/SignInPage\";\nimport HomePage from \"./features/home/containers/HomePage\";\nimport NotFoundPage from \"./components/404\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport { getCurrentUser } from \"./features/auth/selectors/currentUser\";\nimport NotAuthorizedNavbar from \"./components/NotAuthorizedNavbar\";\nimport AuthorizedNavbar from \"./components/AuthorizedNavbar\";\nimport PostsPage from \"./features/posts/containers/PostsPage\";\nimport UsersPage from \"./features/users/containers/UsersPage\";\nimport SignUpPage from \"./features/signup/containers/SignUpPage\";\nimport FriendsPage from './features/friends-request/containers/friendsPage';\n\nfunction SocialApp() {\n  const currentUser = useSelector(getCurrentUser);\n  const dispatch = useDispatch();\n  const [hasUserRequested, setUserRequested] = useState(false);\n  // fetch current user if possible\n  useEffect(() =>{\n      dispatch(fetchCurrentUser())\n        .then(() => setUserRequested(true))\n        .catch(() => setUserRequested(true))\n  }\n, [dispatch]);\n  if (!hasUserRequested) return null;\n  return (\n    <Container className='social-app'>\n      <Router>\n        <Header>\n          <NavLink to='/' activeClassName='active-nav'>Social app</NavLink>\n        </Header>\n        {!currentUser && <NotAuthorizedNavbar />}\n        {currentUser && <AuthorizedNavbar /> }\n        <Switch>\n          <Route path='/' exact>\n            <HomePage />\n          </Route>\n          <Route path='/sign-in' exact>\n            <SignInPage />\n          </Route>\n          <Route path='/sign-up' exact>\n            <SignUpPage />\n          </Route>\n          <ProtectedRoute path='/posts' exact>\n            <PostsPage />\n          </ProtectedRoute>\n          <ProtectedRoute path='/users' exact>\n            <UsersPage />\n          </ProtectedRoute>\n          <ProtectedRoute path='/friends' exact>\n            <FriendsPage />\n          </ProtectedRoute>\n          <Route path='*' component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </Container>\n  );\n}\n\nexport default SocialApp;\n","import React from 'react'\nimport store from './configureStore'\nimport { Provider } from 'react-redux'\nimport SocialApp from './SocialApp'\n\nexport default function App() {\n    return (\n        <Provider store={store}>\n            <SocialApp />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport '../node_modules/semantic-ui-css/semantic.css';\nimport './App.css';\n\n\nimport SocialApp from './tasks/week-8'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <SocialApp />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}